import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;

import java.nio.charset.StandardCharsets;

// Needed libraries:
// https://repo1.maven.org/maven2/com/rabbitmq/amqp-client/5.16.0/amqp-client-5.16.0.jar
// https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar
// https://repo1.maven.org/maven2/org/slf4j/slf4j-simple/1.7.36/slf4j-simple-1.7.36.jar

// Java client API - https://rabbitmq.github.io/rabbitmq-java-client/api/current/
public class SimpleSend {
    private final static String QUEUE_NAME = "dsvwork";
    private final static int[] MSG_LEN = {8, 2, 6, 3, 7, 4, 9, 1};

    String generateMessage(int length) {
        String retval = "";
        for (int i=0; i<length; i++)
            retval += " ..";
        return retval;
    }

    public static void main(String[] argv) throws Exception {
        ConnectionFactory factory = new ConnectionFactory();
        factory.setHost("localhost");
        factory.setPort(5672);
//        factory.setUsername();
//        factory.setPassword();

        String message = String.join(" ", argv);
        if (message.length() == 0) {message = "Hello awesome DSV!";}

        try (Connection connection = factory.newConnection();   // connection and channel implements java.lang.AutoCloseable
             Channel channel = connection.createChannel()) {
            // create queue - idempotent operation
            // name (autogenerated), durable (false), exclusive (true), autoDelete (true), Map_of_other_properties
            channel.queueDeclare(QUEUE_NAME, false, false, false, null);
            // exchange - "" -> default/nameless
            // durable - property: MessageProperties.PERSISTENT_TEXT_PLAIN
            channel.basicPublish("", QUEUE_NAME, null, message.getBytes(StandardCharsets.UTF_8));
            System.out.println(" [x] Sent '" + message + "'");
        }
    }
}